# Importar librerias necesarias
import streamlit as st
import pandas as pd

# Importar funciones necesarias
from graficas import mapa_calor



def calcular_crecimiento(a침o):
    """
    Esta funci칩n calcula el crecimiento de la poblaci칩n de los Estados Unidos
    en un a침o espec칤fico.
    
    Args:
        a침o (int): A침o para el cual se desea calcular el crecimiento.
        
    Return:
        crecimiento (int): Crecimiento de la poblaci칩n en el a침o especificado.
    """
    # Filtrar los datos para el a침o especificado
    df_a침o = df_poblacion[df_poblacion['a침o'] == a침o]
    
    # Filtrar los datos para el a침o anterior
    df_a침o_anterior = df_poblacion[df_poblacion['a침o'] == a침o-1]
    
    # Calcular el crecimiento de la poblaci칩n en el a침o por cada estado
    df_crecimiento = df_a침o[
        "poblacion"].to_numpy() - df_a침o_anterior["poblacion"].to_numpy()
    
    # Calcular la poblaci칩n total en el a침o
    poblacion = df_a침o['poblacion'].sum()
    
    # Calcular la poblaci칩n total en el a침o anterior
    poblacion_anterior = df_a침o_anterior['poblacion'].sum()
    
    # Calcular el crecimiento de la poblaci칩n
    crecimiento = poblacion - poblacion_anterior
    
    # Retornar el valor del crecimiento
    return crecimiento, pd.Series(df_crecimiento)


# Cargar datos
df_poblacion = pd.read_csv('us-population.csv')

# Configurar la vista general de la p치gina
st.set_page_config(
    page_title="US Population",
    page_icon="游딯",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Definir las columnas de la p치gina
col1, col2 = st.columns([1, 5])

# Definir la barra lateral
with st.sidebar:
    # Imprimir el titulo de la barra lateral
    st.title("US Population")
    
    # Imprimi el subtitulo de la barra lateral
    st.write("Esta p치gina muestra la poblaci칩n de los Estados Unidos.")
    
    # Definir el menu de seleccion de a침o
    a침o = st.selectbox("Selecciona un a침o", list(range(2023, 2009, -1)))
    
    # Filtrar los datos para el a침o seleccionado
    df_poblacion_a침o = df_poblacion[df_poblacion['a침o'] == a침o]

# Definir la vista de la columna peque침a
with col1:
    # Imprimir el titulo de la columna peque침a
    st.subheader("Crecimiento")
    
    if int(a침o) > 2010:
        # Calcular el crecimiento de la poblaci칩n
        crecimiento, df_crecimiento = calcular_crecimiento(a침o)
        
        # Calcular la poblaci칩n total en ese a침o
        poblacion = df_poblacion[df_poblacion['a침o'] == a침o]['poblacion'].sum()
        
        # Imprimir el crecimiento de la poblaci칩n
        st.success(f"+{crecimiento:,} personas")      
        
        # Imprimir el titulo de la seccion
        st.subheader("Porcentaje de crecimiento")
        
        # Imprimir el porcentaje de crecimiento
        st.success(f"+{(crecimiento/poblacion)*100:.2f}%")
        
        # Imprimir el titulo de la seccion
        st.subheader("Estado con mayor crecimiento")
        
        # Encontrar el estado con mayor crecimiento
        indice_mayor = df_crecimiento.idxmax()
               
        # Buscar el nombre del estado con mayor crecimiento
        estado_mayor_crecimiento = df_poblacion_a침o.iloc[
            indice_mayor]['estado']
        
        # Imprimir el estado con mayor crecimiento
        st.write(estado_mayor_crecimiento)
        
        # Imprimir el crecimiento del estado con mayor crecimiento
        st.success(f"+{df_crecimiento.max()} personas")
        
        # Imprimir el titulo de la seccion
        st.subheader("Estado con menor crecimiento")
        
        # Encontrar el estado con menor crecimiento
        indice_menor = df_crecimiento.idxmin()
        
        # Buscar el nombre del estado con menor crecimiento
        estado_menor_crecimiento = df_poblacion_a침o.iloc[
            indice_menor]['estado']
        
        # Imprimir el estado con menor crecimiento
        st.write(estado_menor_crecimiento)
        
        # Imprimir el crecimiento del estado con menor crecimiento
        if df_crecimiento.min() < 0:
            # Si el crecimiento es negativo, poner en rojo
            st.error(f"{df_crecimiento.min()} personas")
        else:
            # Si el crecimiento es positivo, agregar el signo de suma
            st.success(f"+{df_crecimiento.min()} personas")
    elif int(a침o) == 2010:
        # Si el a침o es 2010, no hay datos
        st.write("No hay datos para el a침o 2010")

    
# Definir la vista de la columna grande
with col2:
    # Imprimir el titulo de la columna grande
    st.header("Poblaci칩n de los Estados Unidos")
    
    # Imprimir el subtitulo de la columna grande
    st.write("""Mapa de calor de la poblaci칩n de los Estados Unidos 
             por cada estado.""")
    
    # Mostrar el mapa si hay un 침o seleccionado
    if a침o:
        # Crear el mapa de calor
        mapa = mapa_calor(df_poblacion_a침o, 'abreviacion', 'poblacion')
        
        # Mostrar el mapa de calor
        st.plotly_chart(mapa, use_container_width=True)
    
    # Imprimir el titulo de la tabla
    st.header("Poblacion por estado")
    
    # Imprimir la tabla con los datos de poblaci칩n
    st.dataframe(df_poblacion_a침o.sort_values(by='poblacion', ascending=False),
                 hide_index=True,
                 width=1000,
                )   